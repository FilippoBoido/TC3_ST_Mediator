<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.12">
  <POU Name="FB_Mediator" Id="{c5574a95-b005-4b8b-ba18-453adb328f12}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Mediator
VAR_INPUT
END_VAR
VAR_OUTPUT

END_VAR
VAR
	aPeersConnected : ARRAY[1..nMAX_PEER_NUMBER] OF ST_PeerAccount;
	nStackPointer : UINT := 1;
	bAtLeastOnePeerConnected : BOOL;
END_VAR
VAR CONSTANT
	nMAX_PEER_NUMBER : UINT := 100;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[M_CheckMailboxes();
M_DispatchMessages();]]></ST>
    </Implementation>
    <Method Name="M_AddPeer" Id="{694e1e7b-7df5-4562-92ab-e389ee720bcc}">
      <Declaration><![CDATA[METHOD M_AddPeer : E_MediatorReturnCode
VAR_INPUT
	in_iPeer : I_Peer;
END_VAR
VAR
	i : UINT;
	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF nStackPointer > nMAX_PEER_NUMBER THEN
	M_AddPeer := E_MediatorReturnCode.eMAX_NUMBER_OF_CONNECTED_PEERS;
	RETURN;
END_IF

FOR i := 1 TO nMAX_PEER_NUMBER DO
	IF aPeersConnected[i].iPeer = in_iPeer THEN
		M_AddPeer := E_MediatorReturnCode.ePEER_ALREADY_CONNECTED;
		RETURN;	
	END_IF
END_FOR

aPeersConnected[nStackPointer].iPeer := in_iPeer;
aPeersConnected[nStackPointer].rMailbox Ref= in_iPeer.M_RetrieveMailbox();

F_CreateLinkedListHnd( 
	ADR( aPeersConnected[nStackPointer].nodes ), 
	SIZEOF( aPeersConnected[nStackPointer].nodes ), 
	aPeersConnected[nStackPointer].hList 
);

nStackPointer := nStackPointer + 1;

bAtLeastOnePeerConnected := TRUE;

M_AddPeer := E_MediatorReturnCode.ePEER_CONNECTED;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_CheckMailboxes" Id="{cd0b5dd7-0ae3-4858-8ff7-ce85195c1ca9}">
      <Declaration><![CDATA[//To do:	case-switch instead of If-Else chain
//			return an enum-message that can be forwarded to the outside

METHOD M_CheckMailboxes : BOOL

VAR
	nSendersAccount : UINT;
	pMemoryAddresses : ARRAY[1..nMAX_PEER_NUMBER] OF POINTER TO ST_Message;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bAtLeastOnePeerConnected THEN
	RETURN;
END_IF 

FOR nSendersAccount := 1 TO nStackPointer-1 DO
	
	IF aPeersConnected[nSendersAccount].rMailbox.bMessageSent THEN
		aPeersConnected[nSendersAccount].rMailbox.bMessageSent := FALSE;		
	END_IF
	
	IF aPeersConnected[nSendersAccount].rMailbox.bSendingMessage THEN
		
		// If the senders account has less then 100 messages, add the outgoing message to the message list 
		IF aPeersConnected[nSendersAccount].nStackPointer <= 100 THEN
			
			aPeersConnected[nSendersAccount].bMailboxFull := FALSE;
			
			//Create the memory only once per message
			IF pMemoryAddresses[nSendersAccount] = NULL THEN
				pMemoryAddresses[nSendersAccount] :=  M_CreateListMemory(aPeersConnected[nSendersAccount].rMailbox.stOutbox);
			ELSE
				
				aPeersConnected[nSendersAccount].
					fbMessagesList.
						A_AddTailValue( 
							putValue := pMemoryAddresses[nSendersAccount],
							hList := aPeersConnected[nSendersAccount].hList 
						);
			END_IF
			
			//If the list done adding the value, continue
			IF aPeersConnected[nSendersAccount].fbMessagesList.bOk THEN
				
				aPeersConnected[nSendersAccount].nStackPointer := aPeersConnected[nSendersAccount].nStackPointer + 1;
			
				IF aPeersConnected[nSendersAccount].bMailboxEmpty THEN
					 aPeersConnected[nSendersAccount].bMailboxEmpty := FALSE;
				END_IF
				
				aPeersConnected[nSendersAccount].rMailbox.bSendingMessage := FALSE;
				M_DeleteMessage(aPeersConnected[nSendersAccount].rMailbox.stOutbox);
				
				//Will be true for only one cycle
				aPeersConnected[nSendersAccount].rMailbox.bMessageSent := TRUE;
				
			END_IF				
			
		ELSE
			
			//Mailbox contains more than 100 messages
			aPeersConnected[nSendersAccount].bMailboxFull := TRUE;
			
		END_IF
		
	END_IF
	
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_CreateListMemory" Id="{799cc274-4855-47cc-a27d-011bb7d36137}">
      <Declaration><![CDATA[METHOD PRIVATE M_CreateListMemory : POINTER TO ST_Message
VAR_INPUT
	in_stMessage : ST_Message;
END_VAR
VAR_INST
	nLastCreatedObject : PVOID;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_CreateListMemory := __NEW(ST_Message);
nLastCreatedObject := M_CreateListMemory;
IF M_CreateListMemory <> NULL THEN
	M_CreateListMemory^ := in_stMessage;
END_IF


]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_DeleteMessage" Id="{d67f622b-522c-4120-9a39-b65d529ab39b}">
      <Declaration><![CDATA[METHOD M_DeleteMessage : BOOL
VAR_IN_OUT
	inout_stMessageToDelete : ST_MESSAGE;
END_VAR
VAR
	stEmptyMessage : ST_MESSAGE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[inout_stMessageToDelete := stEmptyMessage;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_DeleteMessageFromSendersAccount" Id="{9f20e6c9-acb9-4365-ba5d-c0831e56f4b4}">
      <Declaration><![CDATA[METHOD M_DeleteMessageFromSendersAccount : BOOL
VAR_INPUT
	in_nAccount : UINT;
END_VAR
VAR
	stEmptyMessage : ST_MESSAGE;
END_VAR
VAR_INST
	pLastDeletedObject : POINTER TO ST_Message;
	bMessageRemovedFromList : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bMessageRemovedFromList THEN
	
	//Remove oldest message from list
	aPeersConnected[in_nAccount].
		fbMessagesList.
			A_RemoveHeadValue( 
				hList := aPeersConnected[in_nAccount].hList,
				getPosPtr => pLastDeletedObject 
			);
			
	bMessageRemovedFromList := aPeersConnected[in_nAccount].fbMessagesList.bOk;
	
ELSE
	
	IF pLastDeletedObject <> NULL THEN
		__DELETE(pLastDeletedObject);
	END_IF

	aPeersConnected[in_nAccount].nStackPointer := aPeersConnected[in_nAccount].nStackPointer - 1;

	IF aPeersConnected[in_nAccount].nStackPointer = 1 THEN
		aPeersConnected[in_nAccount].bMailboxEmpty := TRUE;
	END_IF
	
	bMessageRemovedFromList := FALSE;
	M_DeleteMessageFromSendersAccount := TRUE;
	
END_IF

		


]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_DispatchMessages" Id="{8caccc8f-9c76-40c6-b08f-e8828ce973c6}">
      <Declaration><![CDATA[METHOD M_DispatchMessages 
VAR_INPUT
END_VAR
VAR
	nSenderPeer : UINT;
	nReceiverPeer : UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bAtLeastOnePeerConnected THEN
	RETURN;
END_IF 

FOR nSenderPeer := 1 TO nStackPointer DO
	
	//Check if peers have mail to send
	IF NOT aPeersConnected[nSenderPeer].bMailboxEmpty THEN
		
		//Result 0 means peer not found
		nReceiverPeer := M_FindPeer( M_GetReceiverPeerId( nSenderPeer ) );
		
		IF nReceiverPeer > 0 THEN
			
			//Sends the message only when the receiver has emptied its own mailbox
			IF 	NOT aPeersConnected[nReceiverPeer].rMailbox.bNewMessageAvail
				THEN				
				
				IF M_SendMessage(
					in_nReceiverPeer := nReceiverPeer,
					in_nSenderPeer := nSenderPeer 
				) THEN
					aPeersConnected[nSenderPeer].eDispatchRoutineReturnCode := eMESSAGE_DISPATCHED;
				ELSE
					aPeersConnected[nSenderPeer].eDispatchRoutineReturnCode := eDISPATCHING_MESSAGE;
				END_IF
				
			ELSE
				aPeersConnected[nSenderPeer].eDispatchRoutineReturnCode := eMESSAGE_NOT_DISPATCHED;
			END_IF
			
		ELSE
			// Report peer not found;	
			aPeersConnected[nSenderPeer].eDispatchRoutineReturnCode := ePEER_NOT_FOUND;
		END_IF
				
	END_IF
	
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_FindPeer" Id="{878caac1-d47b-4a31-9e53-2db987497e7a}">
      <Declaration><![CDATA[METHOD M_FindPeer : UINT
VAR_INPUT
	in_ePeer : E_PeersList;
END_VAR
VAR
	i : UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF 	NOT bAtLeastOnePeerConnected 
	OR in_ePeer = NULL 
	THEN
	
	RETURN;
	
END_IF 

//Check if receiver peer is in the peers list and return position of peer in the list
FOR i := 1 TO nStackPointer - 1 DO
	
	IF aPeersConnected[i].iPeer.M_GetPeerId() = in_ePeer THEN
		
		M_FindPeer := i;
		RETURN;
		
	END_IF
	
END_FOR

M_FindPeer := 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_GetReceiverPeerId" Id="{22257351-27a0-43bb-96ee-bf162d2f9dfc}">
      <Declaration><![CDATA[METHOD PRIVATE M_GetReceiverPeerId : E_PeersList
VAR_INPUT
	in_nSenderPeer : UINT;
END_VAR
VAR
	pMessage : POINTER TO ST_Message;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Extract receivers Id from the oldest message in the list
aPeersConnected[in_nSenderPeer].
	fbMessagesList.A_GetHead( 
		hList := aPeersConnected[in_nSenderPeer].hList,
		getValue => pMessage 
	);
	
IF 	aPeersConnected[in_nSenderPeer].fbMessagesList.bOk 
	AND pMessage <> NULL 
	THEN
	
	M_GetReceiverPeerId := pMessage^.ePeer;
	
END_IF								
]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_IsPeerConnected" Id="{9f12470a-c2b8-4395-87f5-2eeef52e26d8}">
      <Declaration><![CDATA[METHOD M_IsPeerConnected : BOOL
VAR_INPUT
	in_ePeer : E_PeersList;
END_VAR
VAR
	i : UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO nMAX_PEER_NUMBER DO
	
	IF aPeersConnected[i].iPeer.M_GetPeerId() = in_ePeer THEN
		
		M_IsPeerConnected := TRUE;
		RETURN;
		
	END_IF
	
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_SendMessage" Id="{99be8876-3430-43f6-82fc-8cdde1ca3f33}">
      <Declaration><![CDATA[METHOD M_SendMessage : BOOL
VAR_INPUT
	in_nReceiverPeer : UINT;
	in_nSenderPeer :UINT;
END_VAR

VAR_INST
	bMessageRetrievedFromList : BOOL;
	pMessage : POINTER TO ST_MESSAGE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bMessageRetrievedFromList THEN
	
	//Dispatch mail after the FIFO principle
	aPeersConnected[in_nSenderPeer].
		fbMessagesList.
			A_GetHead( 
				getValue => pMessage,
				hList := aPeersConnected[in_nSenderPeer].hList
			);
			
	bMessageRetrievedFromList := aPeersConnected[in_nSenderPeer].fbMessagesList.bOk;	
	
ELSE
		IF pMessage <> NULL THEN
			aPeersConnected[in_nReceiverPeer].rMailbox.stInbox := pMessage^; 		
			aPeersConnected[in_nReceiverPeer].rMailbox.stInbox.ePeer := aPeersConnected[in_nSenderPeer].iPeer.M_GetPeerId(); 	
		END_IF
	
		IF 	M_DeleteMessageFromSendersAccount(
				in_nAccount := in_nSenderPeer
			) 	
			THEN
		
			aPeersConnected[in_nReceiverPeer].rMailbox.bNewMessageAvail := TRUE;
			bMessageRetrievedFromList := FALSE;
			pMessage := NULL;
			M_SendMessage := TRUE;
			
		END_IF
		
END_IF
	

				
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Mediator">
      <LineId Id="9" Count="0" />
      <LineId Id="16" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mediator.M_AddPeer">
      <LineId Id="24" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="25" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="34" Count="3" />
      <LineId Id="33" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="16" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mediator.M_CheckMailboxes">
      <LineId Id="10" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="25" Count="2" />
      <LineId Id="15" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="70" Count="3" />
      <LineId Id="68" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="77" Count="7" />
      <LineId Id="92" Count="1" />
      <LineId Id="76" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mediator.M_CreateListMemory">
      <LineId Id="5" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="10" Count="2" />
      <LineId Id="8" Count="1" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mediator.M_DeleteMessage">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mediator.M_DeleteMessageFromSendersAccount">
      <LineId Id="40" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="45" Count="5" />
      <LineId Id="43" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="55" Count="7" />
      <LineId Id="44" Count="0" />
      <LineId Id="64" Count="3" />
      <LineId Id="42" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="9" Count="1" />
    </LineIds>
    <LineIds Name="FB_Mediator.M_DispatchMessages">
      <LineId Id="48" Count="5" />
      <LineId Id="79" Count="0" />
      <LineId Id="54" Count="5" />
      <LineId Id="61" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="62" Count="1" />
      <LineId Id="65" Count="1" />
      <LineId Id="77" Count="1" />
      <LineId Id="90" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="96" Count="1" />
      <LineId Id="93" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="69" Count="3" />
      <LineId Id="92" Count="0" />
      <LineId Id="73" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mediator.M_FindPeer">
      <LineId Id="23" Count="0" />
      <LineId Id="27" Count="1" />
      <LineId Id="33" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="25" Count="1" />
      <LineId Id="22" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="8" Count="1" />
      <LineId Id="32" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mediator.M_GetReceiverPeerId">
      <LineId Id="7" Count="1" />
      <LineId Id="25" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="28" Count="1" />
      <LineId Id="31" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mediator.M_IsPeerConnected">
      <LineId Id="7" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mediator.M_SendMessage">
      <LineId Id="41" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="47" Count="6" />
      <LineId Id="61" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="92" Count="1" />
      <LineId Id="95" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="66" Count="1" />
      <LineId Id="65" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="37" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>